import {
  ButtonBase_default
} from "./chunk-M6IQOTDW.js";
import "./chunk-QMHGWL7E.js";
import "./chunk-ANQ4GUMJ.js";
import "./chunk-K6BKMVDD.js";
import {
  capitalize_default,
  init_capitalize
} from "./chunk-7G6JNLX5.js";
import {
  init_styled,
  init_useThemeProps,
  styled_default,
  useThemeProps
} from "./chunk-5RIZJB4Z.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  clsx_m_default,
  composeClasses,
  generateUtilityClass,
  generateUtilityClasses,
  init_base,
  init_clsx_m,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_jsx_runtime,
  require_prop_types
} from "./chunk-HHMSDNLG.js";
import "./chunk-7L3SPMWF.js";
import {
  require_react
} from "./chunk-NGONCD6T.js";
import "./chunk-O5D34S7F.js";
import {
  __toModule
} from "./chunk-U3TMEWQO.js";

// node_modules/@mui/material/Fab/Fab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React = __toModule(require_react());
var import_prop_types = __toModule(require_prop_types());
init_clsx_m();
init_base();
init_capitalize();
init_useThemeProps();

// node_modules/@mui/material/Fab/fabClasses.js
init_base();
function getFabUtilityClass(slot) {
  return generateUtilityClass("MuiFab", slot);
}
var fabClasses = generateUtilityClasses("MuiFab", ["root", "primary", "secondary", "extended", "circular", "focusVisible", "disabled", "colorInherit", "sizeSmall", "sizeMedium", "sizeLarge"]);
var fabClasses_default = fabClasses;

// node_modules/@mui/material/Fab/Fab.js
init_styled();
var import_jsx_runtime = __toModule(require_jsx_runtime());
var _excluded = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"];
var useUtilityClasses = (ownerState) => {
  const {
    color,
    variant,
    classes,
    size
  } = ownerState;
  const slots = {
    root: ["root", variant, `size${capitalize_default(size)}`, color === "inherit" && "colorInherit", color === "primary" && "primary", color === "secondary" && "secondary"]
  };
  return composeClasses(slots, getFabUtilityClass, classes);
};
var FabRoot = styled_default(ButtonBase_default, {
  name: "MuiFab",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], styles[`size${capitalize_default(ownerState.size)}`], ownerState.color === "inherit" && styles.colorInherit, ownerState.color === "primary" && styles.primary, ownerState.color === "secondary" && styles.secondary];
  }
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.button, {
  minHeight: 36,
  transition: theme.transitions.create(["background-color", "box-shadow", "border-color"], {
    duration: theme.transitions.duration.short
  }),
  borderRadius: "50%",
  padding: 0,
  minWidth: 0,
  width: 56,
  height: 56,
  boxShadow: theme.shadows[6],
  "&:active": {
    boxShadow: theme.shadows[12]
  },
  color: theme.palette.getContrastText(theme.palette.grey[300]),
  backgroundColor: theme.palette.grey[300],
  "&:hover": {
    backgroundColor: theme.palette.grey.A100,
    "@media (hover: none)": {
      backgroundColor: theme.palette.grey[300]
    },
    textDecoration: "none"
  },
  [`&.${fabClasses_default.focusVisible}`]: {
    boxShadow: theme.shadows[6]
  },
  [`&.${fabClasses_default.disabled}`]: {
    color: theme.palette.action.disabled,
    boxShadow: theme.shadows[0],
    backgroundColor: theme.palette.action.disabledBackground
  }
}, ownerState.size === "small" && {
  width: 40,
  height: 40
}, ownerState.size === "medium" && {
  width: 48,
  height: 48
}, ownerState.variant === "extended" && {
  borderRadius: 48 / 2,
  padding: "0 16px",
  width: "auto",
  minHeight: "auto",
  minWidth: 48,
  height: 48
}, ownerState.variant === "extended" && ownerState.size === "small" && {
  width: "auto",
  padding: "0 8px",
  borderRadius: 34 / 2,
  minWidth: 34,
  height: 34
}, ownerState.variant === "extended" && ownerState.size === "medium" && {
  width: "auto",
  padding: "0 16px",
  borderRadius: 40 / 2,
  minWidth: 40,
  height: 40
}, ownerState.color === "inherit" && {
  color: "inherit"
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.color === "primary" && {
  color: theme.palette.primary.contrastText,
  backgroundColor: theme.palette.primary.main,
  "&:hover": {
    backgroundColor: theme.palette.primary.dark,
    "@media (hover: none)": {
      backgroundColor: theme.palette.primary.main
    }
  }
}, ownerState.color === "secondary" && {
  color: theme.palette.secondary.contrastText,
  backgroundColor: theme.palette.secondary.main,
  "&:hover": {
    backgroundColor: theme.palette.secondary.dark,
    "@media (hover: none)": {
      backgroundColor: theme.palette.secondary.main
    }
  }
}));
var Fab = React.forwardRef(function Fab2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiFab"
  });
  const {
    children,
    className,
    color = "default",
    component = "button",
    disabled = false,
    disableFocusRipple = false,
    focusVisibleClassName,
    size = "large",
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const ownerState = _extends({}, props, {
    color,
    component,
    disabled,
    disableFocusRipple,
    size,
    variant
  });
  const classes = useUtilityClasses(ownerState);
  return (0, import_jsx_runtime.jsx)(FabRoot, _extends({
    className: clsx_m_default(classes.root, className),
    component,
    disabled,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: clsx_m_default(classes.focusVisible, focusVisibleClassName),
    ownerState,
    ref
  }, other, {
    children
  }));
});
true ? Fab.propTypes = {
  children: import_prop_types.default.node,
  classes: import_prop_types.default.object,
  className: import_prop_types.default.string,
  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["default", "inherit", "primary", "secondary"]), import_prop_types.default.string]),
  component: import_prop_types.default.elementType,
  disabled: import_prop_types.default.bool,
  disableFocusRipple: import_prop_types.default.bool,
  disableRipple: import_prop_types.default.bool,
  focusVisibleClassName: import_prop_types.default.string,
  href: import_prop_types.default.string,
  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["small", "medium", "large"]), import_prop_types.default.string]),
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])), import_prop_types.default.func, import_prop_types.default.object]),
  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["circular", "extended"]), import_prop_types.default.string])
} : void 0;
var Fab_default = Fab;

// dep:@mui_material_Fab
var mui_material_Fab_default = Fab_default;
export {
  mui_material_Fab_default as default,
  fabClasses_default as fabClasses,
  getFabUtilityClass
};
//# sourceMappingURL=@mui_material_Fab.js.map
