{
  "version": 3,
  "sources": ["../lodash.isequal/index.js", "../qrcode-generator/qrcode.js", "../react-qrcode-logo/dist/index.js", "dep:react-qrcode-logo"],
  "sourcesContent": ["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '\u2588\u2588': '\u2588',\n        '\u2588 ': '\u2580',\n        ' \u2588': '\u2584',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '\u2588\u2588': '\u2580',\n        '\u2588 ': '\u2580',\n        ' \u2588': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '\u2588';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '\u2588';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('\u2580');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('\u2588\u2588');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QRCode = void 0;\r\nvar isEqual = require(\"lodash.isequal\");\r\nvar qrGenerator = require(\"qrcode-generator\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar QRCode = /** @class */ (function (_super) {\r\n    __extends(QRCode, _super);\r\n    function QRCode(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.canvas = React.createRef();\r\n        return _this;\r\n    }\r\n    QRCode.utf16to8 = function (str) {\r\n        var out = '', i, c;\r\n        var len = str.length;\r\n        for (i = 0; i < len; i++) {\r\n            c = str.charCodeAt(i);\r\n            if ((c >= 0x0001) && (c <= 0x007F)) {\r\n                out += str.charAt(i);\r\n            }\r\n            else if (c > 0x07FF) {\r\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\r\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\r\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\r\n            }\r\n            else {\r\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\r\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    /**\r\n     * Draw a rounded square in the canvas\r\n     */\r\n    QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, radii, fill, ctx) {\r\n        ctx.lineWidth = lineWidth;\r\n        // Adjust coordinates so that the outside of the stroke is aligned to the edges\r\n        y += lineWidth / 2;\r\n        x += lineWidth / 2;\r\n        size -= lineWidth;\r\n        if (!Array.isArray(radii)) {\r\n            radii = [radii, radii, radii, radii];\r\n        }\r\n        // Radius should not be greater than half the size or less than zero\r\n        radii = radii.map(function (r) {\r\n            r = Math.min(r, size / 2);\r\n            return (r < 0) ? 0 : r;\r\n        });\r\n        var rTopLeft = radii[0] || 0;\r\n        var rTopRight = radii[1] || 0;\r\n        var rBottomRight = radii[2] || 0;\r\n        var rBottomLeft = radii[3] || 0;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + rTopLeft, y);\r\n        ctx.lineTo(x + size - rTopRight, y);\r\n        if (rTopRight)\r\n            ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\r\n        ctx.lineTo(x + size, y + size - rBottomRight);\r\n        if (rBottomRight)\r\n            ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\r\n        ctx.lineTo(x + rBottomLeft, y + size);\r\n        if (rBottomLeft)\r\n            ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\r\n        ctx.lineTo(x, y + rTopLeft);\r\n        if (rTopLeft)\r\n            ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        if (fill) {\r\n            ctx.fill();\r\n        }\r\n    };\r\n    /**\r\n     * Draw a single positional pattern eye.\r\n     */\r\n    QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, radii) {\r\n        if (radii === void 0) { radii = [0, 0, 0, 0]; }\r\n        var lineWidth = Math.ceil(cellSize);\r\n        var radiiOuter;\r\n        var radiiInner;\r\n        if (typeof radii !== 'number' && !Array.isArray(radii)) {\r\n            radiiOuter = radii.outer || 0;\r\n            radiiInner = radii.inner || 0;\r\n        }\r\n        else {\r\n            radiiOuter = radii;\r\n            radiiInner = radiiOuter;\r\n        }\r\n        var y = (row * cellSize) + offset;\r\n        var x = (col * cellSize) + offset;\r\n        var size = cellSize * 7;\r\n        // Outer box\r\n        this.drawRoundedSquare(lineWidth, x, y, size, radiiOuter, false, ctx);\r\n        // Inner box\r\n        size = cellSize * 3;\r\n        y += cellSize * 2;\r\n        x += cellSize * 2;\r\n        this.drawRoundedSquare(lineWidth, x, y, size, radiiInner, true, ctx);\r\n    };\r\n    ;\r\n    /**\r\n     * Is this dot inside a positional pattern zone.\r\n     */\r\n    QRCode.prototype.isInPositioninZone = function (col, row, zones) {\r\n        return zones.some(function (zone) { return (row >= zone.row && row <= zone.row + 7 &&\r\n            col >= zone.col && col <= zone.col + 7); });\r\n    };\r\n    QRCode.prototype.shouldComponentUpdate = function (nextProps) {\r\n        return !isEqual(this.props, nextProps);\r\n    };\r\n    QRCode.prototype.componentDidMount = function () {\r\n        this.update();\r\n    };\r\n    QRCode.prototype.componentDidUpdate = function () {\r\n        this.update();\r\n    };\r\n    QRCode.prototype.update = function () {\r\n        var _a = this.props, value = _a.value, ecLevel = _a.ecLevel, enableCORS = _a.enableCORS, size = _a.size, quietZone = _a.quietZone, bgColor = _a.bgColor, fgColor = _a.fgColor, logoImage = _a.logoImage, logoWidth = _a.logoWidth, logoHeight = _a.logoHeight, logoOpacity = _a.logoOpacity, qrStyle = _a.qrStyle, eyeRadius = _a.eyeRadius;\r\n        var qrCode = qrGenerator(0, ecLevel);\r\n        qrCode.addData(QRCode.utf16to8(value));\r\n        qrCode.make();\r\n        var canvas = ReactDOM.findDOMNode(this.canvas.current);\r\n        var ctx = canvas.getContext('2d');\r\n        var canvasSize = +size + (2 * +quietZone);\r\n        var length = qrCode.getModuleCount();\r\n        var cellSize = size / length;\r\n        var scale = (window.devicePixelRatio || 1);\r\n        canvas.height = canvas.width = canvasSize * scale;\r\n        ctx.scale(scale, scale);\r\n        ctx.fillStyle = bgColor;\r\n        ctx.fillRect(0, 0, canvasSize, canvasSize);\r\n        var offset = +quietZone;\r\n        var positioningZones = [\r\n            { row: 0, col: 0 },\r\n            { row: 0, col: length - 7 },\r\n            { row: length - 7, col: 0 },\r\n        ];\r\n        ctx.strokeStyle = fgColor;\r\n        if (qrStyle === 'dots') {\r\n            ctx.fillStyle = fgColor;\r\n            var radius = cellSize / 2;\r\n            for (var row = 0; row < length; row++) {\r\n                for (var col = 0; col < length; col++) {\r\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, (radius / 100) * 75, 0, 2 * Math.PI, false);\r\n                        ctx.closePath();\r\n                        ctx.fill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var row = 0; row < length; row++) {\r\n                for (var col = 0; col < length; col++) {\r\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\r\n                        ctx.fillStyle = fgColor;\r\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\r\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\r\n                        ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Draw positioning patterns\r\n        for (var i = 0; i < 3; i++) {\r\n            var _b = positioningZones[i], row = _b.row, col = _b.col;\r\n            var radii = eyeRadius;\r\n            if (Array.isArray(radii)) {\r\n                radii = radii[i];\r\n            }\r\n            if (typeof radii == 'number') {\r\n                radii = [radii, radii, radii, radii];\r\n            }\r\n            this.drawPositioningPattern(ctx, cellSize, offset, row, col, radii);\r\n        }\r\n        if (logoImage) {\r\n            var image_1 = new Image();\r\n            if (enableCORS) {\r\n                image_1.crossOrigin = 'Anonymous';\r\n            }\r\n            image_1.onload = function () {\r\n                var dwidth = logoWidth || size * 0.2;\r\n                var dheight = logoHeight || dwidth;\r\n                var dx = (size - dwidth) / 2;\r\n                var dy = (size - dheight) / 2;\r\n                image_1.width = dwidth;\r\n                image_1.height = dheight;\r\n                ctx.save();\r\n                ctx.globalAlpha = logoOpacity;\r\n                ctx.drawImage(image_1, dx + offset, dy + offset, dwidth, dheight);\r\n                ctx.restore();\r\n            };\r\n            image_1.src = logoImage;\r\n        }\r\n    };\r\n    QRCode.prototype.render = function () {\r\n        var size = +this.props.size + (2 * +this.props.quietZone);\r\n        return React.createElement('canvas', {\r\n            id: 'react-qrcode-logo',\r\n            height: size,\r\n            width: size,\r\n            style: { height: size + 'px', width: size + 'px' },\r\n            ref: this.canvas\r\n        });\r\n    };\r\n    QRCode.defaultProps = {\r\n        value: 'https://reactjs.org/',\r\n        ecLevel: 'M',\r\n        enableCORS: false,\r\n        size: 150,\r\n        quietZone: 10,\r\n        bgColor: '#FFFFFF',\r\n        fgColor: '#000000',\r\n        logoOpacity: 1,\r\n        qrStyle: 'squares',\r\n        eyeRadius: [],\r\n    };\r\n    return QRCode;\r\n}(React.Component));\r\nexports.QRCode = QRCode;\r\n", "export default require(\"./node_modules/react-qrcode-logo/dist/index.js\");"],
  "mappings": "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",
  "names": []
}
